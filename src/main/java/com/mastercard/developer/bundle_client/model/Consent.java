/*
 * Bundle Profile API
 * MC product bundle profile
 *
 * The version of the OpenAPI document: 1.0
 * Contact: Digital_Enablement_Team_3@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.bundle_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Consent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-23T15:18:38.136+05:30[Asia/Calcutta]")
public class Consent {
  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private String uuid;

  public static final String SERIALIZED_NAME_USE_CATEGORY_CODE = "useCategoryCode";
  @SerializedName(SERIALIZED_NAME_USE_CATEGORY_CODE)
  private String useCategoryCode;

  public static final String SERIALIZED_NAME_SERVICE_CODE = "serviceCode";
  @SerializedName(SERIALIZED_NAME_SERVICE_CODE)
  private String serviceCode;

  public static final String SERIALIZED_NAME_SERVICE_FUNCTION_CODE = "serviceFunctionCode";
  @SerializedName(SERIALIZED_NAME_SERVICE_FUNCTION_CODE)
  private String serviceFunctionCode;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_CONSENTED_DATE = "consentedDate";
  @SerializedName(SERIALIZED_NAME_CONSENTED_DATE)
  private String consentedDate;

  public static final String SERIALIZED_NAME_CONSENT_TYPE = "consentType";
  @SerializedName(SERIALIZED_NAME_CONSENT_TYPE)
  private String consentType;

  public static final String SERIALIZED_NAME_AGREED = "agreed";
  @SerializedName(SERIALIZED_NAME_AGREED)
  private Boolean agreed;

  public static final String SERIALIZED_NAME_USE_CATEGORY_VALUE = "useCategoryValue";
  @SerializedName(SERIALIZED_NAME_USE_CATEGORY_VALUE)
  private String useCategoryValue;


  public Consent uuid(String uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * UUID of consent - Value generated by General Data Protection Regulation (GDPR) after Program onboarding.
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "d3459481-fb1c-48bb-8685-40eb629e2ae1", value = "UUID of consent - Value generated by General Data Protection Regulation (GDPR) after Program onboarding.")

  public String getUuid() {
    return uuid;
  }



  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  public Consent useCategoryCode(String useCategoryCode) {
    
    this.useCategoryCode = useCategoryCode;
    return this;
  }

   /**
   * The use category code of consent provided by GDPR combination of TOC and Privacy Notice.
   * @return useCategoryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "UC-01", value = "The use category code of consent provided by GDPR combination of TOC and Privacy Notice.")

  public String getUseCategoryCode() {
    return useCategoryCode;
  }



  public void setUseCategoryCode(String useCategoryCode) {
    this.useCategoryCode = useCategoryCode;
  }


  public Consent serviceCode(String serviceCode) {
    
    this.serviceCode = serviceCode;
    return this;
  }

   /**
   * service code for a program for which you need consent language text provided by GDPR.
   * @return serviceCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "priceless", value = "service code for a program for which you need consent language text provided by GDPR.")

  public String getServiceCode() {
    return serviceCode;
  }



  public void setServiceCode(String serviceCode) {
    this.serviceCode = serviceCode;
  }


  public Consent serviceFunctionCode(String serviceFunctionCode) {
    
    this.serviceFunctionCode = serviceFunctionCode;
    return this;
  }

   /**
   * service function code of consent provided by GDPR.
   * @return serviceFunctionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "registration-page code", value = "service function code of consent provided by GDPR.")

  public String getServiceFunctionCode() {
    return serviceFunctionCode;
  }



  public void setServiceFunctionCode(String serviceFunctionCode) {
    this.serviceFunctionCode = serviceFunctionCode;
  }


  public Consent country(String country) {
    
    this.country = country;
    return this;
  }

   /**
   * Country of user - Alpha-3 ISO 3166-1 country code
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "BRA", value = "Country of user - Alpha-3 ISO 3166-1 country code")

  public String getCountry() {
    return country;
  }



  public void setCountry(String country) {
    this.country = country;
  }


  public Consent language(String language) {
    
    this.language = language;
    return this;
  }

   /**
   * Indicates the User&#39;s preferred written or spoken language. Generally used for selecting a localized user interface; e.g., &#39;en_us&#39; specifies the language English and country US.
   * @return language
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "en_us", value = "Indicates the User's preferred written or spoken language. Generally used for selecting a localized user interface; e.g., 'en_us' specifies the language English and country US.")

  public String getLanguage() {
    return language;
  }



  public void setLanguage(String language) {
    this.language = language;
  }


  public Consent consentedDate(String consentedDate) {
    
    this.consentedDate = consentedDate;
    return this;
  }

   /**
   * ISO 8601 format of Datetime with timezone (extended notation) (E8601DZw.d) (yyyy-mm-ddThh:mm:ss.nnnnnn+|-hh:mm).
   * @return consentedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-06-19T12:30:42.307+0000", value = "ISO 8601 format of Datetime with timezone (extended notation) (E8601DZw.d) (yyyy-mm-ddThh:mm:ss.nnnnnn+|-hh:mm).")

  public String getConsentedDate() {
    return consentedDate;
  }



  public void setConsentedDate(String consentedDate) {
    this.consentedDate = consentedDate;
  }


  public Consent consentType(String consentType) {
    
    this.consentType = consentType;
    return this;
  }

   /**
   * Type of Consent. Accepted values - pdf-document, author-legal-content-document, consentLanguageText
   * @return consentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "author-legal-content-document", value = "Type of Consent. Accepted values - pdf-document, author-legal-content-document, consentLanguageText")

  public String getConsentType() {
    return consentType;
  }



  public void setConsentType(String consentType) {
    this.consentType = consentType;
  }


  public Consent agreed(Boolean agreed) {
    
    this.agreed = agreed;
    return this;
  }

   /**
   * Is consent accepted by the user, by default false
   * @return agreed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Is consent accepted by the user, by default false")

  public Boolean getAgreed() {
    return agreed;
  }



  public void setAgreed(Boolean agreed) {
    this.agreed = agreed;
  }


  public Consent useCategoryValue(String useCategoryValue) {
    
    this.useCategoryValue = useCategoryValue;
    return this;
  }

   /**
   * Data Processor Consent Category Short Description.
   * @return useCategoryValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "acceptPersonalizedOffersEmail", value = "Data Processor Consent Category Short Description.")

  public String getUseCategoryValue() {
    return useCategoryValue;
  }



  public void setUseCategoryValue(String useCategoryValue) {
    this.useCategoryValue = useCategoryValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Consent consent = (Consent) o;
    return Objects.equals(this.uuid, consent.uuid) &&
        Objects.equals(this.useCategoryCode, consent.useCategoryCode) &&
        Objects.equals(this.serviceCode, consent.serviceCode) &&
        Objects.equals(this.serviceFunctionCode, consent.serviceFunctionCode) &&
        Objects.equals(this.country, consent.country) &&
        Objects.equals(this.language, consent.language) &&
        Objects.equals(this.consentedDate, consent.consentedDate) &&
        Objects.equals(this.consentType, consent.consentType) &&
        Objects.equals(this.agreed, consent.agreed) &&
        Objects.equals(this.useCategoryValue, consent.useCategoryValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, useCategoryCode, serviceCode, serviceFunctionCode, country, language, consentedDate, consentType, agreed, useCategoryValue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Consent {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    useCategoryCode: ").append(toIndentedString(useCategoryCode)).append("\n");
    sb.append("    serviceCode: ").append(toIndentedString(serviceCode)).append("\n");
    sb.append("    serviceFunctionCode: ").append(toIndentedString(serviceFunctionCode)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    consentedDate: ").append(toIndentedString(consentedDate)).append("\n");
    sb.append("    consentType: ").append(toIndentedString(consentType)).append("\n");
    sb.append("    agreed: ").append(toIndentedString(agreed)).append("\n");
    sb.append("    useCategoryValue: ").append(toIndentedString(useCategoryValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

