/*
 * Bundle Profile API
 * MC product bundle profile
 *
 * The version of the OpenAPI document: 1.0
 * Contact: Digital_Enablement_Team_3@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.bundle_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mastercard.developer.bundle_client.model.Address;
import com.mastercard.developer.bundle_client.model.Email;
import com.mastercard.developer.bundle_client.model.Identification;
import com.mastercard.developer.bundle_client.model.Im;
import com.mastercard.developer.bundle_client.model.Name;
import com.mastercard.developer.bundle_client.model.PhoneNumber;
import com.mastercard.developer.bundle_client.model.Photo;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * User
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-23T15:18:38.136+05:30[Asia/Calcutta]")
public class User {
  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_ADDRESSES = "addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<Address> addresses = null;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_EMAILS = "emails";
  @SerializedName(SERIALIZED_NAME_EMAILS)
  private List<Email> emails = null;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "externalId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  private String externalId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IDENTIFICATIONS = "identifications";
  @SerializedName(SERIALIZED_NAME_IDENTIFICATIONS)
  private List<Identification> identifications = null;

  public static final String SERIALIZED_NAME_IMS = "ims";
  @SerializedName(SERIALIZED_NAME_IMS)
  private List<Im> ims = null;

  public static final String SERIALIZED_NAME_LOCALE = "locale";
  @SerializedName(SERIALIZED_NAME_LOCALE)
  private String locale;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private Name name;

  public static final String SERIALIZED_NAME_NICK_NAME = "nickName";
  @SerializedName(SERIALIZED_NAME_NICK_NAME)
  private String nickName;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_PHONE_NUMBERS = "phoneNumbers";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBERS)
  private List<PhoneNumber> phoneNumbers = null;

  public static final String SERIALIZED_NAME_PHOTOS = "photos";
  @SerializedName(SERIALIZED_NAME_PHOTOS)
  private List<Photo> photos = null;

  public static final String SERIALIZED_NAME_PREFERRED_LANGUAGE = "preferredLanguage";
  @SerializedName(SERIALIZED_NAME_PREFERRED_LANGUAGE)
  private String preferredLanguage;

  public static final String SERIALIZED_NAME_PROFILE_URL = "profileUrl";
  @SerializedName(SERIALIZED_NAME_PROFILE_URL)
  private String profileUrl;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_USER_NAME = "userName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public static final String SERIALIZED_NAME_USER_TYPE = "userType";
  @SerializedName(SERIALIZED_NAME_USER_TYPE)
  private String userType;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "dateOfBirth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  private String dateOfBirth;


  public User active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * A Boolean value indicating the user&#39;s administrative status. When a user is registered with a bank, it is stored in a database with active &#x3D; false flag, the user gets activated and can log in after entering an activation code.
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "A Boolean value indicating the user's administrative status. When a user is registered with a bank, it is stored in a database with active = false flag, the user gets activated and can log in after entering an activation code.")

  public Boolean getActive() {
    return active;
  }



  public void setActive(Boolean active) {
    this.active = active;
  }


  public User addresses(List<Address> addresses) {
    
    this.addresses = addresses;
    return this;
  }

  public User addAddressesItem(Address addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * Get addresses
   * @return addresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Address> getAddresses() {
    return addresses;
  }



  public void setAddresses(List<Address> addresses) {
    this.addresses = addresses;
  }


  public User displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * The name of the User, suitable for display to end-users. The name should be the full name of the User being described, if known.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Patrick Star", value = "The name of the User, suitable for display to end-users. The name should be the full name of the User being described, if known.")

  public String getDisplayName() {
    return displayName;
  }



  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public User emails(List<Email> emails) {
    
    this.emails = emails;
    return this;
  }

  public User addEmailsItem(Email emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * Get emails
   * @return emails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Email> getEmails() {
    return emails;
  }



  public void setEmails(List<Email> emails) {
    this.emails = emails;
  }


  public User userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Unique, opaque identifier for the user as defined by the provisioning client. The allowed values for alphanumeric characters are [a-z, A-Z, 0-9] and unreserved special characters [-_.!~*&#39;()]
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "user123.partnerBank", value = "Unique, opaque identifier for the user as defined by the provisioning client. The allowed values for alphanumeric characters are [a-z, A-Z, 0-9] and unreserved special characters [-_.!~*'()]")

  public String getUserId() {
    return userId;
  }



  public void setUserId(String userId) {
    this.userId = userId;
  }


  public User externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

   /**
   * External client unique identifier, identical to the userId for external clients
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "user123.partnerBank", value = "External client unique identifier, identical to the userId for external clients")

  public String getExternalId() {
    return externalId;
  }



  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public User id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier for the user as defined by MA.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "d3459481-fb1c-48bb-8685-40eb629e2ae1", value = "Unique identifier for the user as defined by MA.")

  public String getId() {
    return id;
  }



  public void setId(String id) {
    this.id = id;
  }


  public User identifications(List<Identification> identifications) {
    
    this.identifications = identifications;
    return this;
  }

  public User addIdentificationsItem(Identification identificationsItem) {
    if (this.identifications == null) {
      this.identifications = new ArrayList<>();
    }
    this.identifications.add(identificationsItem);
    return this;
  }

   /**
   * Get identifications
   * @return identifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Identification> getIdentifications() {
    return identifications;
  }



  public void setIdentifications(List<Identification> identifications) {
    this.identifications = identifications;
  }


  public User ims(List<Im> ims) {
    
    this.ims = ims;
    return this;
  }

  public User addImsItem(Im imsItem) {
    if (this.ims == null) {
      this.ims = new ArrayList<>();
    }
    this.ims.add(imsItem);
    return this;
  }

   /**
   * Get ims
   * @return ims
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Im> getIms() {
    return ims;
  }



  public void setIms(List<Im> ims) {
    this.ims = ims;
  }


  public User locale(String locale) {
    
    this.locale = locale;
    return this;
  }

   /**
   * Used to indicate the User&#39;s default location for purposes of localizing items such as currency, date time format, or numerical representations.
   * @return locale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "en-US", value = "Used to indicate the User's default location for purposes of localizing items such as currency, date time format, or numerical representations.")

  public String getLocale() {
    return locale;
  }



  public void setLocale(String locale) {
    this.locale = locale;
  }


  public User name(Name name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Name getName() {
    return name;
  }



  public void setName(Name name) {
    this.name = name;
  }


  public User nickName(String nickName) {
    
    this.nickName = nickName;
    return this;
  }

   /**
   * The casual way to address the user in real life, e.g., &#39;Bob&#39; or &#39;Bobby&#39; instead of &#39;Robert&#39;. This attribute should not be used to represent a User&#39;s username (e.g., &#39;bjensen&#39; or &#39;mpepperidge&#39;).
   * @return nickName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The casual way to address the user in real life, e.g., 'Bob' or 'Bobby' instead of 'Robert'. This attribute should not be used to represent a User's username (e.g., 'bjensen' or 'mpepperidge').")

  public String getNickName() {
    return nickName;
  }



  public void setNickName(String nickName) {
    this.nickName = nickName;
  }


  public User password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPassword() {
    return password;
  }



  public void setPassword(String password) {
    this.password = password;
  }


  public User phoneNumbers(List<PhoneNumber> phoneNumbers) {
    
    this.phoneNumbers = phoneNumbers;
    return this;
  }

  public User addPhoneNumbersItem(PhoneNumber phoneNumbersItem) {
    if (this.phoneNumbers == null) {
      this.phoneNumbers = new ArrayList<>();
    }
    this.phoneNumbers.add(phoneNumbersItem);
    return this;
  }

   /**
   * Get phoneNumbers
   * @return phoneNumbers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PhoneNumber> getPhoneNumbers() {
    return phoneNumbers;
  }



  public void setPhoneNumbers(List<PhoneNumber> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
  }


  public User photos(List<Photo> photos) {
    
    this.photos = photos;
    return this;
  }

  public User addPhotosItem(Photo photosItem) {
    if (this.photos == null) {
      this.photos = new ArrayList<>();
    }
    this.photos.add(photosItem);
    return this;
  }

   /**
   * Get photos
   * @return photos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Photo> getPhotos() {
    return photos;
  }



  public void setPhotos(List<Photo> photos) {
    this.photos = photos;
  }


  public User preferredLanguage(String preferredLanguage) {
    
    this.preferredLanguage = preferredLanguage;
    return this;
  }

   /**
   * Indicates Preferred spoken/written Language with/without region form - Internationalization (Locale) like zh_CN, en_GB, fr
   * @return preferredLanguage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "en", value = "Indicates Preferred spoken/written Language with/without region form - Internationalization (Locale) like zh_CN, en_GB, fr")

  public String getPreferredLanguage() {
    return preferredLanguage;
  }



  public void setPreferredLanguage(String preferredLanguage) {
    this.preferredLanguage = preferredLanguage;
  }


  public User profileUrl(String profileUrl) {
    
    this.profileUrl = profileUrl;
    return this;
  }

   /**
   * A fully qualified URL pointing to a page representing the User&#39;s online profile.
   * @return profileUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "mastercard.com/patrickStar", value = "A fully qualified URL pointing to a page representing the User's online profile.")

  public String getProfileUrl() {
    return profileUrl;
  }



  public void setProfileUrl(String profileUrl) {
    this.profileUrl = profileUrl;
  }


  public User timezone(String timezone) {
    
    this.timezone = timezone;
    return this;
  }

   /**
   * The User&#39;s time zone in the &#39;Olson&#39; time zone database format, e.g., &#39;America/Los_Angeles&#39;.
   * @return timezone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "America/Los_Angeles", value = "The User's time zone in the 'Olson' time zone database format, e.g., 'America/Los_Angeles'.")

  public String getTimezone() {
    return timezone;
  }



  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }


  public User title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The user&#39;s title, such as Vice President.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Vice President", value = "The user's title, such as Vice President.")

  public String getTitle() {
    return title;
  }



  public void setTitle(String title) {
    this.title = title;
  }


  public User userName(String userName) {
    
    this.userName = userName;
    return this;
  }

   /**
   * Unique identifier for the User, typically used by the user to directly authenticate to the client provider. Each User must include a non-empty userName value. This identifier must be unique across the client&#39;s entire set of Users.
   * @return userName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "patrickStar123", value = "Unique identifier for the User, typically used by the user to directly authenticate to the client provider. Each User must include a non-empty userName value. This identifier must be unique across the client's entire set of Users.")

  public String getUserName() {
    return userName;
  }



  public void setUserName(String userName) {
    this.userName = userName;
  }


  public User userType(String userType) {
    
    this.userType = userType;
    return this;
  }

   /**
   * Used to identify the relationship between the organization and the user. Typical values used might be &#39;Contractor&#39;, &#39;Employee&#39;, &#39;Intern&#39;, &#39;Temp&#39;, &#39;External&#39;, and &#39;Unknown&#39;, but any value may be used.
   * @return userType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Intern", value = "Used to identify the relationship between the organization and the user. Typical values used might be 'Contractor', 'Employee', 'Intern', 'Temp', 'External', and 'Unknown', but any value may be used.")

  public String getUserType() {
    return userType;
  }



  public void setUserType(String userType) {
    this.userType = userType;
  }


  public User dateOfBirth(String dateOfBirth) {
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * date of birth of user in format YYYY-MM-DD
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1992-11-17", value = "date of birth of user in format YYYY-MM-DD")

  public String getDateOfBirth() {
    return dateOfBirth;
  }



  public void setDateOfBirth(String dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.active, user.active) &&
        Objects.equals(this.addresses, user.addresses) &&
        Objects.equals(this.displayName, user.displayName) &&
        Objects.equals(this.emails, user.emails) &&
        Objects.equals(this.userId, user.userId) &&
        Objects.equals(this.externalId, user.externalId) &&
        Objects.equals(this.id, user.id) &&
        Objects.equals(this.identifications, user.identifications) &&
        Objects.equals(this.ims, user.ims) &&
        Objects.equals(this.locale, user.locale) &&
        Objects.equals(this.name, user.name) &&
        Objects.equals(this.nickName, user.nickName) &&
        Objects.equals(this.password, user.password) &&
        Objects.equals(this.phoneNumbers, user.phoneNumbers) &&
        Objects.equals(this.photos, user.photos) &&
        Objects.equals(this.preferredLanguage, user.preferredLanguage) &&
        Objects.equals(this.profileUrl, user.profileUrl) &&
        Objects.equals(this.timezone, user.timezone) &&
        Objects.equals(this.title, user.title) &&
        Objects.equals(this.userName, user.userName) &&
        Objects.equals(this.userType, user.userType) &&
        Objects.equals(this.dateOfBirth, user.dateOfBirth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, addresses, displayName, emails, userId, externalId, id, identifications, ims, locale, name, nickName, password, phoneNumbers, photos, preferredLanguage, profileUrl, timezone, title, userName, userType, dateOfBirth);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    identifications: ").append(toIndentedString(identifications)).append("\n");
    sb.append("    ims: ").append(toIndentedString(ims)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nickName: ").append(toIndentedString(nickName)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    phoneNumbers: ").append(toIndentedString(phoneNumbers)).append("\n");
    sb.append("    photos: ").append(toIndentedString(photos)).append("\n");
    sb.append("    preferredLanguage: ").append(toIndentedString(preferredLanguage)).append("\n");
    sb.append("    profileUrl: ").append(toIndentedString(profileUrl)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

